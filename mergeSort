/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>

using namespace std;

void merge(int a[] , int start , int mid , int end){
    int m = mid - start + 1 ;
    int n = mid + end ; 
    int e[m];
    int f[n];
    
    for(int i=0 ; i<m ; i++){
        e[i] = a[start + i];    
    }
    
    for(int j=0 ; j<n ; j++){
        f[j] = a[mid + 1 + j] ;
    }
    
    int k=start;
    int c=0;
    int d=0;
    
    while(c<m && d<n){
        if(e[c] < f[d]){
            a[k] = e[c];
            k++;
            c++;
        }else{
            a[k] = f[d];
            k++;
            d++;
        }
    }
    
    while(c<m){
        a[k] = e[c];
        k++;
        c++;
    }
    
    while(d<n){
        a[k] = f[d];
        k++;
        d++;
    }
    
    return ;
}

void mergeSort(int a[]  , int start , int end){
    if(start>=end){
        return ;
    }
    int mid = (start + end)/2 ;
    mergeSort(a , start , mid);
    mergeSort(a , mid+1 , end);
    merge(a , start , mid  , end);
    
    
}

int main()
{
    int a[] = {2,5,7,6,8,1,4,3,9}; 
    int n = 9 ; 
    mergeSort(a , 0 , 8);
    
    for(int i=0 ; i<9 ; i++){
        cout<<a[i]<<" ";
    }
    
    return 0;
}












//**************************************************************************** 2024 ******************************************************




void mergeSort(vector<int>& v, int i, int j) {
    cout<<"mergeSort "<<endl;
    int mid = (i+j)/2;
    int left = (mid - i) + 1;
    int right = (j - mid);
    int a[left];
    int b[right];
    int total = (j - i) + 1;
    int c[total];
    cout<<"Left Value "<<i<<endl;
    for (int k=0; k<left; k++) {
        cout<<v[k+i]<<" ";
        a[k] = v[k+i];
    }
    cout<<endl;
    cout<<"Right Value "<<mid+1<<endl;
    for (int k=0; k<right; k++) {
        cout<<v[k+mid+1]<<" ";
        b[k] = v[k+mid+1];
    }
    cout<<endl;
    int m=0,n=0, k=0;
    
    while (m<left && n<right) {
        if (a[m] < b[n]) {
            c[k++] = a[m++];
        } else {
            c[k++] = b[n++];
        }
    }
    
    while (m<left) {
        c[k++] = a[m++];
    }
    
    while (n < right) {
        c[k++] = b[n++];
    }
    
    for (int x=0; x<total; x++) {
        v[i+x] = c[x];
    }
}

void merge(vector<int>& v, int i, int j) {
    if (i >= j) {
        return;
    }
    
    int mid = (i+j)/2;
    merge(v, i, mid);
    merge(v,mid+1,j);
    mergeSort(v,i,j);
}



int main()
{
    vector<int> v{1,2,3,4,5,6,4,8,9};
    merge(v,0,8);
    for (int i=0; i<9; i++) {
        cout<<v[i]<<" ";
    }

    return 0;
}

